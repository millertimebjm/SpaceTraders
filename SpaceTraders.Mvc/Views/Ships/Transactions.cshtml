@using SpaceTraders.Models
@using SpaceTraders.Mvc.Services
@model ShipTransactionsModel
@{
    ViewData["Title"] = "Transactions";
    var ship = Model.Ship;
    var transactions = Model.Transactions;
}

<h3>@ship.Symbol - @ship.Registration.Role</h3>
<table class="table">
    <thead>
        <tr>
            <th>Time</th>
            <th>Waypoint</th>
            <th>Symbol</th>
            <th style="text-align: center;">Type</th>
            <th style="text-align: center;">Price</th>
            <th style="text-align: center;">Qty</th>
            <th style="text-align: center;">Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in transactions.Where(t => t.TradeSymbol != InventoryEnum.FUEL.ToString()).OrderByDescending(t => t.Timestamp))
        {
            <tr>
                <td>@(ViewHelperService.MinimalHumanReadableTimeSpan(DateTime.UtcNow - transaction.Timestamp))</td>
                <td>@transaction.WaypointSymbol</td>
                <td>@transaction.TradeSymbol</td>
                <td style="text-align: right;">@transaction.Type</td>
                <td style="text-align: right;">@transaction.PricePerUnit</td>
                <td style="text-align: right;">@transaction.Units</td>
                <td style="text-align: right;">@transaction.TotalPrice</td>
            </tr>
        }
    </tbody>
</table>

@* Task SaveTradeModelsAsync(IReadOnlyList<Waypoint> waypoints);
    Task<IReadOnlyList<TradeModel>> GetTradeModelsAsync(); *@