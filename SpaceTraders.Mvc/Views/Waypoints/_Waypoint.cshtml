@using SpaceTraders.Models;
@using SpaceTraders.Models.Enums
@using SpaceTraders.Services.Systems
@using SpaceTraders.Services.Waypoints
@using SpaceTraders.Services.Waypoints.Interfaces
@model Waypoint

<h6 style="margin-top:20px; margin-bottom: 0px;">Waypoint <a href="/waypoints/@Model.Symbol">@Model.Symbol</a></h6>
<ul>
    <li><b>System:</b> <a href="/systems/@WaypointsService.ExtractSystemFromWaypoint(Model.Symbol)">@WaypointsService.ExtractSystemFromWaypoint(Model.Symbol)</a></li>
    <li><b>Type: </b> @Model.Type</li>
    <li><b>X:</b> @Model.X</li>
    <li><b>Y:</b> @Model.Y</li>
    @if (Model.Traits?.Any() == true)
    {
        <li><b>Traits: </b> @string.Join(",", Model.Traits.Select(t => t.Name))</li>
    }
    @if (!string.IsNullOrWhiteSpace(Model.Orbits))
    {
        <li><b>Orbits:</b> @Model.Orbits</li>
    }
    @if (Model.Traits?.Any() == true 
        && Model.Traits.Select(t => t.Name.ToUpper()).ToList().Contains(WaypointTypesEnum.SHIPYARD.ToString()))
    {
        <li><a href="/systems/@WaypointsService.ExtractSystemFromWaypoint(Model.Symbol)/waypoints/@Model.Symbol/shipyard">Shipyard</a></li>
    }
    <li><a href="/waypoints/@Model.Symbol/navigate">Navigate To</a></li>
</ul>

@if (Model.Shipyard is not null)
{
    <div style="margin-left:10px; border-left-style: solid; border-left-width: 1px; padding-left: 10px;">
        @{
            await Html.RenderPartialAsync("~/Views/Shipyards/_Shipyard.cshtml", Model.Shipyard);
        }
    </div>
}

<div style="margin-left:10px; border-left-style: solid; border-left-width: 1px; padding-left: 10px;">
    @foreach (var orbital in Model.Orbitals)
    {
        await Html.RenderPartialAsync("~/Views/Orbitals/_Orbital.cshtml", orbital);
    }
</div>